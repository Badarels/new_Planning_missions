version: "3.9"

services:
  zookeeper:
    image: bitnami/zookeeper:3.9.1
    container_name: bcs-zookeeper
    environment:
      - ZOO_ENABLE_AUTH=no
      - ZOO_SERVER_ID=1
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/bitnami/zookeeper
    networks:
      - bcs-network

  kafka:
    image: bitnami/kafka:3.6.1
    container_name: bcs-kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - bcs-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: bcs-kafka-ui
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=bcs
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    ports:
      - "8085:8080"
    networks:
      - bcs-network

  postgres:
    image: postgres:15
    container_name: bcs-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bcs-network

volumes:
  zookeeper-data:
  kafka-data:
  postgres-data:

networks:
  bcs-network:
    driver: bridge
